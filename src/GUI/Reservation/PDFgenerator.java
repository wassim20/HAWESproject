/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Reservation;
/**
 *
 * @author Houssem
 */
//package de.vogella.itext.write;

import java.io.FileOutputStream;
import java.util.Date;

import Entités.Reservation;
import Entités.Paiement;
import Entités.utilisateurs;
import Service.utilisateurService;
import Entités.utilisateurs;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;


public class PDFgenerator {
    private static String filename;
    private static String FILE = "";
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    private static utilisateurs u = new utilisateurs();
    private static utilisateurs admin = new utilisateurs();
    private static utilisateurService us = new utilisateurService();
    private static Reservation r = new Reservation();
    private static Paiement p = new Paiement();
    
    public static void setFilename(String filename){
        PDFgenerator.filename = filename;
    }
    public static void setU(utilisateurs u){
        PDFgenerator.u = u;
    }

    public static void setR(Reservation r) {
        PDFgenerator.r = r;
    }

    public static void setP(Paiement p) {
        PDFgenerator.p = p;
    }
    
    public static void main() {
        try {
            //u=us.getUserById(r.getIdUser());
            Document document = new Document();
            FILE = System.getProperty("user.dir")+"/PDFFiles/"+filename+".pdf";
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();
            addMetaData(document);
            addTitlePage(document);
            //addContent(document);
            document.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private static void addMetaData(Document document) {
        document.addTitle("Document de réservation");
        document.addSubject("Using API iText");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("Houssem Hosni");
        document.addCreator("Hosni Houssem");
    }

    private static void addTitlePage(Document document)
            throws DocumentException {
        try {
            admin.setNomUser(us.currentUser.getNomUser());
            admin.setPrenomUser(us.currentUser.getPrenomUser());
            Paragraph preface = new Paragraph();
            // We add one empty line
            addEmptyLine(preface, 1);
            // Lets write a big header
            preface.add(new Paragraph("Ticket du réservation", catFont));
            
            addEmptyLine(preface, 1);
            u=us.getUserById(r.getIdUser());
            preface.add(new Paragraph(
                    "Cher(e)  Client(e)  " + u.getNomUser() + " " + u.getPrenomUser() + ",  \n\t Votre Réservation à été traité", //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                    smallBold));
            addEmptyLine(preface, 1);
            // Will create: Report generated by: _name, _date
            preface.add(new Paragraph(
                    "Réservation validé par : " + admin.getNomUser() +" " + admin.getPrenomUser() + ", " + new Date()+"\n Priére de garder les données de ce document", //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                    smallBold));
            addEmptyLine(preface, 3);
            preface.add(new Paragraph(
                    r.prepareToPDF(),
                    //"test1",
                    smallBold));
            
            addEmptyLine(preface, 2);
            
            preface.add(new Paragraph(
                    p.prepareToPDF(r),
                    //"test2",
                    smallBold));
            
            addEmptyLine(preface, 2);
            
            preface.add(new Paragraph(
                    "Ce document contient tout les informations de votre séjour.",
                    redFont));
            
            document.add(preface);
            // Start a new page
            //document.newPage();
        } catch (SQLException ex) {
            Logger.getLogger(PDFgenerator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /*
    private static void addContent(Document document) throws DocumentException {
        Anchor anchor = new Anchor("First Chapter", catFont);
        anchor.setName("First Chapter");

        // Second parameter is the number of the chapter
        Chapter catPart = new Chapter(new Paragraph(anchor), 1);

        Paragraph subPara = new Paragraph("Subcategory 1", subFont);
        Section subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("Hello"));

        subPara = new Paragraph("Subcategory 2", subFont);
        subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("Paragraph 1"));
        subCatPart.add(new Paragraph("Paragraph 2"));
        subCatPart.add(new Paragraph("Paragraph 3"));

        // add a list
        createList(subCatPart);
        Paragraph paragraph = new Paragraph();
        addEmptyLine(paragraph, 5);
        subCatPart.add(paragraph);

        // add a table
        createTable(subCatPart);

        // now add all this to the document
        document.add(catPart);

        // Next section
        anchor = new Anchor("Second Chapter", catFont);
        anchor.setName("Second Chapter");

        // Second parameter is the number of the chapter
        catPart = new Chapter(new Paragraph(anchor), 1);

        subPara = new Paragraph("Subcategory", subFont);
        subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("This is a very important message"));

        // now add all this to the document
        document.add(catPart);

    }

    private static void createTable(Section subCatPart)
            throws BadElementException {
        PdfPTable table = new PdfPTable(3);

        // t.setBorderColor(BaseColor.GRAY);
        // t.setPadding(4);
        // t.setSpacing(4);
        // t.setBorderWidth(1);

        PdfPCell c1 = new PdfPCell(new Phrase("Table Header 1"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Table Header 2"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Table Header 3"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        table.setHeaderRows(1);

        table.addCell("1.0");
        table.addCell("1.1");
        table.addCell("1.2");
        table.addCell("2.1");
        table.addCell("2.2");
        table.addCell("2.3");

        subCatPart.add(table);

    }

    private static void createList(Section subCatPart) {
        List list = new List(true, false, 10);
        list.add(new ListItem("First point"));
        list.add(new ListItem("Second point"));
        list.add(new ListItem("Third point"));
        subCatPart.add(list);
    }
    */
    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}